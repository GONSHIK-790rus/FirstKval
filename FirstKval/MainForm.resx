<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        B4qUT95H2py/AAAAAElFTkSuQmCC
</value>
  </data>
</root>